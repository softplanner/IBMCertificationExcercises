<!-- Stored Procedure: Exercise 1
In this exercise, you will create and execute a stored procedure to read data from a # table on mysql phpadmin using SQL.

You will create a stored procedure routine named RETRIEVE_ALL.
This RETRIEVE_ALL routine will contain an SQL query to retrieve all the records from # the PETSALE table, so you don't need to write the same query over and over again. You # just call the stored procedure routine to execute the query everytime. -->

DELIMITER //

CREATE PROCEDURE RETRIEVE_ALL()

BEGIN
    SELECT * FROM PETSALE;
END //

DELIMITER ;

# RETRIEVE STORED PROCEDURE
#
CALL RETRIEVE_ALL;

# drop procedure
<!-- DROP PROCEDURE RETRIEVE_ALL; -->

CALL RETRIEVE_ALL;

<!-- Stored Procedure: Exercise 2
In this exercise, you will create and execute a stored procedure to write/modify data in a table on MySQL using SQL.

You will create a stored procedure routine named UPDATE_SALEPRICE with parameters Animal_ID and Animal_Health.

This UPDATE_SALEPRICE routine will contain SQL queries to update the sale price of the animals in the PETSALE table depending on their health conditions, BAD or WORSE.

This procedure routine will take animal ID and health conditon as parameters which will be used to update the sale price of animal in the PETSALE table by an amount depending on their health condition. Suppose that:

For animal with ID XX having BAD health condition, the sale price will be reduced further by 25%.
For animal with ID YY having WORSE health condition, the sale price will be reduced further by 50%.
For animal with ID ZZ having other health condition, the sale price won't change. -->

DELIMITER @

CREATE PROCEDURE UPDATE_SALEPRICE(IN Animal_ID INTEGER, IN ANIMAL_HEALTH VARCHAR(5))

BEGIN
    IF ANIMAL_HEALTH = 'BAD' THEN
    SET SALEPRICE = SALEPRICE - (SALEPRICE * 0.25)
    WHERE ID = Animal_ID;
    ELSEIF ANIMAL_HEALTH = 'WORSE' THEN
    SET SALEPRICE = SALEPRICE - (SALEPRICE * 0.50)
    WHERE ID = Animal_ID;
    ELSE
        UPDATE PETSALE
        SET SALEPRICE = SALEPRICE
        WHERE ID = Animal_ID;
    END IF;
END @
DELIMITER ;

<!-- 1. Let's call the UPDATE_SALEPRICE routine. We want to update the sale price of animal with ID 1 having BAD health condition in the PETSALE table. -->

CALL RETRIEVE_ALL;

CALL UPDATE_SALEPRICE(1, 'BAD');

CALL RETRIEVE_ALL;

<!-- 2. Let's call the UPDATE_SALEPRICE routine once again. We want to update the sale price of animal with ID 3 having WORSE health condition in the PETSALE table. -->

   CALL RETRIEVE_ALL;

   CALL UPDATE_SALEPRICE(3, 'WORSE');

   CALL RETRIEVE_ALL;

<!-- 3. If you wish to drop the stored procedure routine UPDATE_SALEPRICE-->

DROP PROCEDURE UPDATE_SALEPRICE;

CALL UPDATE_SALEPRICE;